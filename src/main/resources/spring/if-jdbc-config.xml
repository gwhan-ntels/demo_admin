<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<bean id="pureDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName">
			<value>${jdbc.driverClass}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="initialSize">
			<value>2</value>
		</property>
		<property name="maxActive">
			<value>100</value>
		</property>
		<property name="maxIdle">
			<value>20</value>
		</property>
		<property name="maxWait">
			<value>3000</value>
		</property>
		<property name="defaultAutoCommit">
			<value>true</value>
		</property>
		<property name="minEvictableIdleTimeMillis">
			<value>300000</value>
		</property>
		<property name="timeBetweenEvictionRunsMillis">
			<value>300000</value>
		</property>
		<property name="numTestsPerEvictionRun">
			<value>10</value>
		</property>
		<property name="validationQuery">
			<value>${jdbc.validation.query}</value>
		</property>
		<property name="testOnBorrow">
			<value>true</value>
		</property>
		<property name="testWhileIdle">
			<value>true</value>
		</property>
	</bean>

	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="pureDataSource" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="SQL=>&#10;&#09;" />
			</bean>
		</property>
	</bean>

	<!-- define the SqlSessionFactory -->
	<!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.ntels.ccbs" />
		<property name="configLocation" value="classpath:config/mapper.config.xml" />
	</bean> 로컬 hot depoly를 위한 주석-->
    <bean id="sqlSessionFactory" class="com.ntels.ccbs.common.sqlSessionFactory.RefreshableSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- <property name="typeAliasesPackage" value="com.ntels.ccbs" /> -->
        <property name="typeAliasesPackage" value="com.ntels.ifg com.ntels.ccbs.system.domain" />
        <property name="configLocation" value="classpath:config/mapper.config.xml" />
        <property name="interval" value="1000" /> <!-- mapper xml 파일을 재로딩 하는 간격 -->
        <property name="mapperLocations">
            <array>
                <value>classpath:com/ntels/ifg/**/*Mapper.xml</value>
                <value>classpath:com/ntels/ccbs/system/mapper/common/service/**/*Mapper.xml</value>
            </array>
        </property>
    </bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ntels.ifg.**.mapper com.ntels.ccbs.system.common.**.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>


	<!-- Transaction -->
	<aop:config>
		<aop:advisor id="managerTx" advice-ref="txAdvice" pointcut="execution(* *..*Service.*(..))" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="createNewSequence*" propagation="REQUIRES_NEW" rollback-for="Throwable" isolation="READ_COMMITTED" />
            <tx:method name="interface*" propagation="REQUIRES_NEW" rollback-for="Throwable" />
            <tx:method name="createNewSubSequence*" propagation="REQUIRED" rollback-for="Throwable" isolation="READ_COMMITTED" />
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="create*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="modify*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="remove*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="del*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="mod*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="treat*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="upt*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="set*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="reg*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="cancel*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="process*" propagation="REQUIRED" rollback-for="Throwable" />
            <tx:method name="getMaxSeq*" propagation="REQUIRED" rollback-for="Throwable" isolation="READ_COMMITTED" />
            <tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
</beans>